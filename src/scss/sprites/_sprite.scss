// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$badge-name: 'badge';
$badge-x: 0px;
$badge-y: 0px;
$badge-offset-x: 0px;
$badge-offset-y: 0px;
$badge-width: 58px;
$badge-height: 58px;
$badge-total-width: 232px;
$badge-total-height: 174px;
$badge-image: '../images/sprite.png';
$badge: (0px, 0px, 0px, 0px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'badge', );
$bill-name: 'bill';
$bill-x: 58px;
$bill-y: 0px;
$bill-offset-x: -58px;
$bill-offset-y: 0px;
$bill-width: 58px;
$bill-height: 58px;
$bill-total-width: 232px;
$bill-total-height: 174px;
$bill-image: '../images/sprite.png';
$bill: (58px, 0px, -58px, 0px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'bill', );
$computer-name: 'computer';
$computer-x: 0px;
$computer-y: 58px;
$computer-offset-x: 0px;
$computer-offset-y: -58px;
$computer-width: 58px;
$computer-height: 58px;
$computer-total-width: 232px;
$computer-total-height: 174px;
$computer-image: '../images/sprite.png';
$computer: (0px, 58px, 0px, -58px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'computer', );
$customer-service-name: 'customer-service';
$customer-service-x: 58px;
$customer-service-y: 58px;
$customer-service-offset-x: -58px;
$customer-service-offset-y: -58px;
$customer-service-width: 58px;
$customer-service-height: 58px;
$customer-service-total-width: 232px;
$customer-service-total-height: 174px;
$customer-service-image: '../images/sprite.png';
$customer-service: (58px, 58px, -58px, -58px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'customer-service', );
$customer-support-name: 'customer-support';
$customer-support-x: 116px;
$customer-support-y: 0px;
$customer-support-offset-x: -116px;
$customer-support-offset-y: 0px;
$customer-support-width: 58px;
$customer-support-height: 58px;
$customer-support-total-width: 232px;
$customer-support-total-height: 174px;
$customer-support-image: '../images/sprite.png';
$customer-support: (116px, 0px, -116px, 0px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'customer-support', );
$network-name: 'network';
$network-x: 116px;
$network-y: 58px;
$network-offset-x: -116px;
$network-offset-y: -58px;
$network-width: 58px;
$network-height: 58px;
$network-total-width: 232px;
$network-total-height: 174px;
$network-image: '../images/sprite.png';
$network: (116px, 58px, -116px, -58px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'network', );
$prototyping-name: 'prototyping';
$prototyping-x: 174px;
$prototyping-y: 0px;
$prototyping-offset-x: -174px;
$prototyping-offset-y: 0px;
$prototyping-width: 58px;
$prototyping-height: 56px;
$prototyping-total-width: 232px;
$prototyping-total-height: 174px;
$prototyping-image: '../images/sprite.png';
$prototyping: (174px, 0px, -174px, 0px, 58px, 56px, 232px, 174px, '../images/sprite.png', 'prototyping', );
$speed-name: 'speed';
$speed-x: 174px;
$speed-y: 56px;
$speed-offset-x: -174px;
$speed-offset-y: -56px;
$speed-width: 58px;
$speed-height: 54px;
$speed-total-width: 232px;
$speed-total-height: 174px;
$speed-image: '../images/sprite.png';
$speed: (174px, 56px, -174px, -56px, 58px, 54px, 232px, 174px, '../images/sprite.png', 'speed', );
$trophy-name: 'trophy';
$trophy-x: 174px;
$trophy-y: 110px;
$trophy-offset-x: -174px;
$trophy-offset-y: -110px;
$trophy-width: 50px;
$trophy-height: 58px;
$trophy-total-width: 232px;
$trophy-total-height: 174px;
$trophy-image: '../images/sprite.png';
$trophy: (174px, 110px, -174px, -110px, 50px, 58px, 232px, 174px, '../images/sprite.png', 'trophy', );
$ui-name: 'ui';
$ui-x: 0px;
$ui-y: 116px;
$ui-offset-x: 0px;
$ui-offset-y: -116px;
$ui-width: 58px;
$ui-height: 58px;
$ui-total-width: 232px;
$ui-total-height: 174px;
$ui-image: '../images/sprite.png';
$ui: (0px, 116px, 0px, -116px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'ui', );
$vector-name: 'vector';
$vector-x: 58px;
$vector-y: 116px;
$vector-offset-x: -58px;
$vector-offset-y: -116px;
$vector-width: 58px;
$vector-height: 58px;
$vector-total-width: 232px;
$vector-total-height: 174px;
$vector-image: '../images/sprite.png';
$vector: (58px, 116px, -58px, -116px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'vector', );
$web-design-name: 'web-design';
$web-design-x: 116px;
$web-design-y: 116px;
$web-design-offset-x: -116px;
$web-design-offset-y: -116px;
$web-design-width: 58px;
$web-design-height: 58px;
$web-design-total-width: 232px;
$web-design-total-height: 174px;
$web-design-image: '../images/sprite.png';
$web-design: (116px, 116px, -116px, -116px, 58px, 58px, 232px, 174px, '../images/sprite.png', 'web-design', );
$spritesheet-width: 232px;
$spritesheet-height: 174px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($badge, $bill, $computer, $customer-service, $customer-support, $network, $prototyping, $speed, $trophy, $ui, $vector, $web-design, );
$spritesheet: (232px, 174px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
